on:
  push:
    branches: [master]

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: [windows-latest]
    strategy:
      fail-fast: false
      matrix:
        buildkit: [true, false]
    steps:
    - uses: actions/checkout@v4
    - name: Setup containerd
      if: matrix.buildkit
      shell: pwsh
      run: |
        $version = "1.7.15"
        curl.exe -L https://github.com/containerd/containerd/releases/download/v$version/containerd-$version-windows-amd64.tar.gz -o containerd.tar.gz
        tar.exe xvf containerd.tar.gz
        .\bin\containerd.exe config default | Out-File .\bin\config.toml -Encoding ascii
        .\bin\containerd.exe --register-service
        Start-Service containerd
    - name: Setup BuildKit
      if: matrix.buildkit
      shell: pwsh
      run: |
        $version = "v0.13.1"
        curl.exe -L https://github.com/moby/buildkit/releases/download/$version/buildkit-$version.windows-amd64.tar.gz -o buildkit.tar.gz
        tar.exe xvf buildkit.tar.gz
        .\bin\buildkitd.exe --register-service --debug --containerd-worker=true --service-name buildkitd
        Start-Service buildkitd
    - name: Setup Docker Buildx
      if: matrix.buildkit
      shell: pwsh
      run: |
        $version = "v0.13.1"
        curl.exe -L https://github.com/docker/buildx/releases/download/$version/buildx-$version.windows-amd64.exe -o $env:ProgramData\Docker\cli-plugins\docker-buildx.exe
    - uses: docker/setup-buildx-action@v3.2.0
      if: matrix.buildkit
      with:
        driver: remote
        endpoint: npipe:////./pipe/buildkitd
    - name: Build
      run: docker ${{ matrix.buildkit && 'buildx' || '' }} build - < .github/docker/windows.Dockerfile
